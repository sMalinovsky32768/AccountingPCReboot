<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AccountingPC"
        xmlns:Data="clr-namespace:System.Data;assembly=System.Data"
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        x:Name="window" x:Class="AccountingPC.AccountingPCWindow" mc:Ignorable="d"
        Title="AccountingPC" Height="768" Width="1366" MinWidth="1366" MinHeight="768"
        WindowStartupLocation="CenterScreen" Icon="images/icon.ico" WindowStyle="None" 
        Loaded="Window_Loaded" Closed="Window_Closed" SizeChanged="Window_SizeChanged"
        LostFocus="Window_LostFocus" GotFocus="Window_GotFocus" 
        Deactivated="Window_Deactivated" Activated="Window_Activated">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.ParametersCommand}" Executed="OpenParameters"/>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.ExitCommand}" Executed="ExitApp"/>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.PopupCloseCommand}" Executed="PopupClose"/>

        <CommandBinding Command="{x:Static local:AccountingPCWindow.SelectViewEquipmentCommand}" Executed="SelectViewEquipment"/>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.SelectViewSoftwareCommand}" Executed="SelectViewSoftware"/>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.SelectViewLocationCommand}" Executed="SelectViewLocation"/>
        <CommandBinding Command="{x:Static local:AccountingPCWindow.UpdateViewCommand}" Executed="UpdateView_Executed"/>
    </Window.CommandBindings>
    <!---->
    <Border RenderTransformOrigin="0.5,0.5" BorderThickness="1" Background="{DynamicResource background-brush}" BorderBrush="{DynamicResource mouse-over-brush}">
        <Grid x:Name="windowGrid">
            <Grid x:Name="mainGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>
                <Grid Panel.ZIndex="9999">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Effect>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="2" Direction="270" Opacity="0.7" Color="{DynamicResource shadow}"/>
                    </Grid.Effect>
                    <Menu x:Name="menu">
                        <MenuItem Header="Файл">
                            <MenuItem Header="Параметры" InputGestureText="F12" Command="{x:Static local:AccountingPCWindow.ParametersCommand}"/>
                            <Separator/>
                            <MenuItem x:Name="menuExit" Header="Выход" InputGestureText="Alt+F4" Command="{x:Static local:AccountingPCWindow.ExitCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Вид">
                            <MenuItem Header="Оборудование" InputGestureText="Alt+E" Command="{x:Static local:AccountingPCWindow.SelectViewEquipmentCommand}"/>
                            <MenuItem Header="Программное обеспечение" InputGestureText="Alt+S" Command="{x:Static local:AccountingPCWindow.SelectViewSoftwareCommand}"/>
                            <MenuItem Header="Локации" InputGestureText="Alt+L" Command="{x:Static local:AccountingPCWindow.SelectViewLocationCommand}"/>
                            <Separator/>
                            <MenuItem Header="Обновить" InputGestureText="Ctrl+R, F5" Command="{x:Static local:AccountingPCWindow.UpdateViewCommand}"/>
                        </MenuItem>
                    </Menu>
                    <StackPanel Grid.Column="1" MouseLeftButtonDown="Border_MouseLeftButtonDown" 
                                Background="{DynamicResource background-brush}"/>
                    <StackPanel Grid.Column="2" Orientation="Horizontal" Background="{DynamicResource background-brush}">
                        <Button x:Name="buttonMinimized" Style="{DynamicResource minimizeButton}"/>
                        <Button x:Name="buttonMaximized" Style="{DynamicResource maximizeButton}"/>
                        <Button x:Name="buttonExit" Style="{DynamicResource exitAppButton}"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1" x:Name="viewGrid">
                    <Grid x:Name="equipmentGrid" Visibility="Collapsed">
                        <Grid.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=nowView}" Value="Equipment">
                                        <Setter Property="Grid.Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="400" MinWidth="200"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <!--Selecting a category Grid-->
                            <ListBox x:Name="equipmentCategoryList" SelectionChanged="ListBox_SelectionChanged" SelectedIndex="-1">
                                <ListBoxItem Content="Компьютеры"/>
                                <ListBoxItem Content="Ноутбуки и Моноблоки"/>
                                <ListBoxItem Content="Мониторы"/>
                                <ListBoxItem Content="Проекторы"/>
                                <ListBoxItem Content="Интерактивные доски"/>
                                <ListBoxItem Content="Экраны для проекторов"/>
                                <ListBoxItem Content="Принтеры и сканеры"/>
                                <ListBoxItem Content="Сетевое оборудование"/>
                                <ListBoxItem Content="Другое оборудование"/>
                            </ListBox>
                        </Grid>
                        <GridSplitter Grid.Column="1" Width="2" ResizeBehavior="PreviousAndNext"/>
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="40" Height="auto"/>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="2"/>
                                <RowDefinition MaxHeight="300" Height="300"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <!--Information Category Grid-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid></Grid>
                                    <Grid Grid.Column="1">
                                        <Grid.Resources>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-view" BasedOn="{StaticResource default-button}">
                                                <Setter Property="Padding" Value="10 5"/>
                                                <Setter Property="Margin" Value="0 5 5 5"/>
                                                <Setter Property="IsEnabled" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=equipmentCategoryList}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-edit" BasedOn="{StaticResource btn-view}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=equipmentView}" Value="1">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-del" BasedOn="{StaticResource btn-view}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=equipmentView}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Content="Добавить" Click="AddDevice" Style="{DynamicResource btn-view}"/>
                                        <Button Grid.Column="1" Content="Изменить" Click="ChangeDevice" Style="{DynamicResource btn-edit}"/>
                                        <Button Grid.Column="2" Content="Удалить" Click="DeleteDevice" Style="{DynamicResource btn-del}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <DataGrid x:Name="equipmentView" IsReadOnly="True" SelectionMode="Extended" SelectionChanged="EquipmentView_SelectionChanged"/>
                            </Grid>
                            <GridSplitter Grid.Row="2" Height="2" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                            <Grid Grid.Row="3">
                                <!--Information Device Grid-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.5*" MinWidth="400"/>
                                    <ColumnDefinition x:Name="softwareColumn"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="300" Width="400" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Image x:Name="deviceImage" Margin="10"/>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <Grid x:Name="installedSoftware">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid Margin="20,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.Resources>
                                                <Style x:Key="soft-button" TargetType="Button" BasedOn="{StaticResource default-button}">
                                                    <Setter Property="FontSize" Value="18"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Width" Value="30"/>
                                                    <Setter Property="Height" Value="30"/>
                                                    <Setter Property="Margin" Value="2"/>
                                                </Style>
                                                <Style x:Key="soft-del-button" TargetType="Button" BasedOn="{StaticResource soft-button}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=softwareOnDevice}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Resources>
                                            <TextBlock Text="Установленное программное обеспечение" Foreground="{DynamicResource on-background-brush}" 
                                                   FontSize="16" FontWeight="Bold" FontStyle="Italic" TextDecorations="{x:Null}" VerticalAlignment="Center"/>
                                            <Button Grid.Column="1" x:Name="addSoftware" Content="+" Style="{DynamicResource soft-button}" Click="AddSoftware_Click">
                                                <Button.ContextMenu>
                                                    <ContextMenu>
                                                        <ContextMenu.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Path=Name}" ToolTip="{Binding Path=CountInstalledString}" 
                                                                        Click="AddSoftwareItem" BorderBrush="Transparent" Background="Transparent" 
                                                                        Foreground="{DynamicResource on-background-brush}"/>
                                                            </DataTemplate>
                                                        </ContextMenu.ItemTemplate>
                                                    </ContextMenu>
                                                </Button.ContextMenu>
                                            </Button>
                                            <Button Grid.Column="2" x:Name="delSoftware" Content="-" Style="{DynamicResource soft-del-button}" Click="DelSoftware_Click"/>
                                        </Grid>
                                        <ListBox Grid.Row="1" Margin="10,5" x:Name="softwareOnDevice" Style="{DynamicResource list-box-no-selected}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=Name}" ToolTip="{Binding Path=CountInstalledString}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid x:Name="softwareGrid" Visibility="Visible">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="400" MinWidth="200"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <!--Selecting a category Grid-->
                            <ListBox x:Name="softwareCategoryList" SelectionChanged="ListBox_SelectionChanged">
                                <ListBoxItem Content="Программное обеспечение"/>
                                <ListBoxItem Content="Операционные системы"/>
                            </ListBox>
                        </Grid>
                        <GridSplitter Grid.Column="1" Width="2" ResizeBehavior="PreviousAndNext"/>
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="40" Height="auto"/>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition MaxHeight="300" Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <!--Information Category Grid-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid></Grid>
                                    <Grid Grid.Column="1">
                                        <Grid.Resources>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-view" BasedOn="{StaticResource default-button}">
                                                <Setter Property="Padding" Value="10 5"/>
                                                <Setter Property="Margin" Value="0 5 5 5"/>
                                                <Setter Property="IsEnabled" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=softwareCategoryList}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-edit" BasedOn="{StaticResource btn-view}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=softwareView}" Value="1">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Button}" x:Key="btn-del" BasedOn="{StaticResource btn-view}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=softwareView}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Content="Добавить" Click="AddSoftware" Style="{DynamicResource btn-view}"/>
                                        <!--<Button Grid.Column="1" Content="Изменить" Click="ChangeSoftware" Style="{DynamicResource btn-edit}"/>-->
                                        <Button Grid.Column="2" Content="Удалить" Click="DeleteSoftware" Style="{DynamicResource btn-del}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <DataGrid x:Name="softwareView" IsReadOnly="True" SelectionMode="Extended"/>
                            </Grid>
                            <GridSplitter Grid.Row="2" Height="2" ResizeBehavior="PreviousAndNext"/>
                            <Grid Grid.Row="3">
                                <!--Information Device Grid-->
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid x:Name="locationManagementGrid" Visibility="Collapsed">

                    </Grid>
                </Grid>
                <Grid Grid.Row="2">
                    <StatusBar Name="status">
                        <StatusBarItem x:Name="statusItem1"/>
                    </StatusBar>
                </Grid>
                <!---->
            </Grid>
            <Popup x:Name="changeEquipmentPopup" Placement="Custom" CustomPopupPlacementCallback="ChangePopupPlacement" 
                   PlacementTarget="{Binding ElementName=windowGrid}" HorizontalOffset="200" VerticalOffset="100" 
                   Opened="ChangeEquipmentPopup_Opened" ScrollViewer.CanContentScroll="True">
                <Popup.CommandBindings>
                    <CommandBinding Command="{x:Static local:AccountingPCWindow.PopupCloseCommand}" Executed="PopupClose"/>
                </Popup.CommandBindings>
                <Grid>
                    <Border Margin="5">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="-5" Opacity="0.9" Color="{DynamicResource shadow}"/>
                        </Border.Effect>
                        <Grid x:Name="grid" Background="{DynamicResource background-brush}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource text-box}">
                                        <Setter Property="Margin" Value="5 1"/>
                                    </Style>
                                    <Style x:Key="invNTextBox" TargetType="TextBox" BasedOn="{StaticResource text-box}">
                                        <Setter Property="Margin" Value="5 1"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=autoInvN}" Value="True">
                                                <Setter Property="TextBox.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="ComboBox" BasedOn="{StaticResource comboBox}">
                                        <Setter Property="Margin" Value="5 1"/>
                                    </Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Margin" Value="10,5"/>
                                        <Setter Property="Height" Value="auto"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                        <Setter Property="FontFamily" Value="Source Sans Pro"/>
                                        <Setter Property="Foreground" Value="{DynamicResource on-background-brush}"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid x:Name="mainPopupGrid">
                                    <Grid.DataContext>
                                        <local:Device x:Name="device"/>
                                    </Grid.DataContext>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="inventoryNumberGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Инвентарный номер"/>
                                        <TextBox Grid.Row="1" x:Name="inventoryNumber" Style="{DynamicResource invNTextBox}" MouseEnter="InventoryNumber_MouseEnter" Validation.Error="InventoryNumber_Error">
                                            <TextBox.Text>
                                                <Binding Path="InventoryNumber" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                        <local:InventoryNumberValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="deviceNameGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Наименование"/>
                                        <ComboBox Grid.Row="1" x:Name="name" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="Name">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="costGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Стоимость"/>
                                        <TextBox Grid.Row="1" x:Name="cost">
                                            <TextBox.Text>
                                                <Binding Path="Cost">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>

                                    <Grid x:Name="motherboardGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Материнская плата"/>
                                        <ComboBox Grid.Row="1" x:Name="motherboard" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="Motherboard">
                                                    <Binding.ValidationRules>
                                                        <local:ComboBoxValidationRule MaxLength="30"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="cpuGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Процессор"/>
                                        <ComboBox Grid.Row="1" x:Name="cpu" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True" SelectionChanged="Cpu_SelectionChanged">
                                            <ComboBox.Text>
                                                <Binding Path="CPU">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="coresGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Количество ядер"/>
                                        <TextBox Grid.Row="1" x:Name="cores">
                                            <TextBox.Text>
                                                <Binding Path="Cores">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="frequencyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Базовая частота"/>
                                        <TextBox Grid.Row="1" x:Name="frequency">
                                            <TextBox.Text>
                                                <Binding Path="Frequency">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="maxFrequencyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Максимальная частота"/>
                                        <TextBox Grid.Row="1" x:Name="maxFrequency">
                                            <TextBox.Text>
                                                <Binding Path="MaxFrequency">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>

                                    <Grid x:Name="vCardGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Видеокарта"/>
                                        <ComboBox Grid.Row="1" x:Name="vCard" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="VCard">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="videoramGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Объем видеопамяти"/>
                                        <TextBox Grid.Row="1" x:Name="videoram">
                                            <TextBox.Text>
                                                <Binding Path="VideoRAM">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="ramGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Объем ОЗУ"/>
                                        <TextBox Grid.Row="1" x:Name="ram">
                                            <TextBox.Text>
                                                <Binding Path="RAM">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="ramFrequencyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Частота памяти"/>
                                        <TextBox Grid.Row="1" x:Name="ramFrequency">
                                            <TextBox.Text>
                                                <Binding Path="FrequencyRAM">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>

                                    <Grid x:Name="ssdGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Объем SSD"/>
                                        <TextBox Grid.Row="1" x:Name="ssd">
                                            <TextBox.Text>
                                                <Binding Path="SSD">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="hddGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Объем HDD"/>
                                        <TextBox Grid.Row="1" x:Name="hdd">
                                            <TextBox.Text>
                                                <Binding Path="HDD">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="osGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Операционная система"/>
                                        <ComboBox Grid.Row="1" x:Name="os"/>
                                    </Grid>
                                    <Grid x:Name="invoiceGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Номер накладной"/>
                                        <ComboBox Grid.Row="1" x:Name="invoice" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="InvoiceNumber">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>

                                    <Grid x:Name="locationGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Расположение"/>
                                        <ComboBox Grid.Row="1" x:Name="location" IsTextSearchEnabled="True"/>
                                    </Grid>

                                    <Grid x:Name="vConnectorsGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Видеовыходы"/>
                                        <ListBox Grid.Row="1" x:Name="vConnectors" SelectionMode="Multiple" Margin="5,1">
                                            <!--<ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <ListBoxItem Content="{Binding Path=Name}"></ListBoxItem>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>-->
                                        </ListBox>
                                    </Grid>

                                    <Grid x:Name="resolutionGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Максимальное разрешение"/>
                                        <ComboBox Grid.Row="1" x:Name="resolution" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="screenFrequencyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Частота обновления"/>
                                        <ComboBox Grid.Row="1" x:Name="screenFrequency" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="matrixTechnologyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Технология изготовления матрицы"/>
                                        <ComboBox Grid.Row="1" x:Name="matrixTechnology" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="projectorTechnologyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Технология изготовления матрицы"/>
                                        <ComboBox Grid.Row="1" x:Name="projectorTechnology" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="typeGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Тип"/>
                                        <ComboBox Grid.Row="1" x:Name="type" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="diagonalGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Диагональ"/>
                                        <TextBox Grid.Row="1" x:Name="diagonal">
                                            <TextBox.Text>
                                                <Binding Path="Diagonal">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="aspectRatioGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Соотношение сторон"/>
                                        <ComboBox Grid.Row="1" x:Name="aspectRatio" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="screenInstalledGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Установка"/>
                                        <ComboBox Grid.Row="1" x:Name="screenInstalled" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="paperSizeGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Формат бумаги"/>
                                        <ComboBox Grid.Row="1" x:Name="paperSize" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="portsGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Количество портов"/>
                                        <TextBox Grid.Row="1" x:Name="ports">
                                            <TextBox.Text>
                                                <Binding Path="Ports">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="wifiFrequencyGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Частота wifi"/>
                                        <ComboBox Grid.Row="1" x:Name="wifiFrequency" IsTextSearchEnabled="True"/>
                                    </Grid>
                                    <Grid x:Name="isEDriveGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <CheckBox Grid.Row="1" x:Name="isEDrive" Content="C электроприводом" HorizontalAlignment="Left">
                                            <CheckBox.IsChecked>
                                                <Binding Path="IsElectronicDrive"/>
                                            </CheckBox.IsChecked>
                                        </CheckBox>
                                    </Grid>

                                    <Grid x:Name="imageLoadGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.Resources>
                                            <Style x:Key="image-load-button" TargetType="Button">
                                                <Setter Property="Margin" Value="0,1,5,1"/>
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="Button.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Grid>
                                                                <Border CornerRadius="0,5,5,0" BorderThickness="0" Name="btnBorder" 
                                                                        Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" 
                                                                        Background="{DynamicResource surface-brush}" BorderBrush="{DynamicResource surface-brush}">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource shadow}" Opacity="0.7" ShadowDepth="-5"/>
                                                                    </Border.Effect>
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                                                      TextElement.FontWeight="Bold" Name="btnContent" 
                                                                                      TextElement.Foreground="{DynamicResource on-surface-brush}">
                                                                    </ContentPresenter>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource mouse-over-brush}"/>
                                                                    <Setter TargetName="btnBorder" Property="Effect">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect BlurRadius="10" Color="{DynamicResource primary-light}" Opacity="1" ShadowDepth="-5"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <!--<Setter Property="Button.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Grid>
                                                                <Border CornerRadius="5" BorderThickness="0" Name="btnBorder" 
                                                                        Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" 
                                                                        Background="{DynamicResource surface-brush}" BorderBrush="{DynamicResource surface-brush}">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource shadow}" Opacity="0.7" ShadowDepth="-5"/>
                                                                    </Border.Effect>
                                                                    <StackPanel>
                                                                        <TextBlock x:Name="load_filename"/>
                                                                        <
                                                                    </StackPanel>
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                                                      TextElement.FontWeight="Bold" Name="btnContent" 
                                                                                      TextElement.Foreground="{DynamicResource on-surface-brush}">
                                                                    </ContentPresenter>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource mouse-over-brush}"/>
                                                                    <Setter TargetName="btnBorder" Property="Effect">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect BlurRadius="10" Color="{DynamicResource primary-light}" Opacity="1" ShadowDepth="-5"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>-->
                                            </Style>
                                            <Style x:Key="image-filename-text-box" TargetType="TextBox">
                                                <Setter Property="TextBox.Foreground" Value="{DynamicResource on-surface-brush}"/>
                                                <Setter Property="TextBox.Padding" Value="5 0"/>
                                                <Setter Property="TextBox.Margin" Value="5,1,0,1"/>
                                                <Setter Property="TextBox.Height" Value="25"/>
                                                <Setter Property="Validation.ErrorTemplate">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Border CornerRadius="5,0,0,5" BorderBrush="{DynamicResource error-brush}" BorderThickness="1,1,0,1">
                                                                <AdornedElementPlaceholder/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="TextBox.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TextBox">
                                                            <Grid>
                                                                <Border CornerRadius="5,0,0,5" BorderThickness="0" x:Name="border"
                                                                        BorderBrush="{DynamicResource surface-brush}" Background="{DynamicResource surface-brush}" 
                                                                        Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource shadow}" Opacity="0.7" ShadowDepth="-5"/>
                                                                    </Border.Effect>
                                                                    <!--Для отображения введенного текста-->
                                                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsFocused" Value="true">
                                                                    <Setter TargetName="border" Property="Effect">
                                                                        <Setter.Value>
                                                                            <DropShadowEffect BlurRadius="10" Color="{DynamicResource primary-light}" Opacity="1" ShadowDepth="-5"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="Validation.HasError" Value="True">
                                                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <TextBlock Text="Изображение"/>
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition MaxWidth="80"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox x:Name="imageFilename" Style="{DynamicResource image-filename-text-box}" IsEnabled="False"/>
                                            <Button Grid.Column="1" x:Name="imageLoad" Style="{DynamicResource image-load-button}" 
                                                    Click="ImageLoad_Click" Content="Открыть"/>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <CheckBox Content="Автоматически устанавливать следующий доступный инвентарный номер" 
                                              VerticalAlignment="Center" x:Name="autoInvN" IsChecked="False" Checked="AutoInvN_Checked"/>
                                    <CheckBox Content="Запретить установку одного инвентарного номера для нескольких устройств" x:Name="disabledRepeatInvN" 
                                              VerticalAlignment="Center" IsChecked="True" Checked="DisabledRepeatInvN_Checked" Unchecked="DisabledRepeatInvN_Unchecked"/>
                                    <CheckBox Content="Изменить для аналогичных устройств" x:Name="changeAnalog" VerticalAlignment="Center"
                                              Checked="ChangeAnalog_Checked" Unchecked="changeAnalog_Unchecked" IsChecked="False"
                                              ToolTip="Совпадают по имени и цене"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Content="Сохранить" Style="{DynamicResource default-button}" Margin="5" Padding="10 5" Click="SaveChanges"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
            <Popup x:Name="changeSoftwarePopup" Placement="Custom" CustomPopupPlacementCallback="ChangePopupPlacement" 
                   PlacementTarget="{Binding ElementName=windowGrid}" HorizontalOffset="400" VerticalOffset="200" 
                   Opened="changeSoftwarePopup_Opened" ScrollViewer.CanContentScroll="True">
                <Popup.CommandBindings>
                    <CommandBinding Command="{x:Static local:AccountingPCWindow.PopupCloseCommand}" Executed="PopupClose"/>
                </Popup.CommandBindings>
                <Grid>
                    <Border Margin="5">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="-5" Opacity="0.9" Color="{DynamicResource shadow}"/>
                        </Border.Effect>
                        <Grid x:Name="softwarePopupGrid" Background="{DynamicResource background-brush}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource text-box}">
                                        <Setter Property="Margin" Value="5 1"/>
                                    </Style>
                                    <Style x:Key="invNTextBox" TargetType="TextBox" BasedOn="{StaticResource text-box}">
                                        <Setter Property="Margin" Value="5 1"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=autoInvN}" Value="True">
                                                <Setter Property="TextBox.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="ComboBox" BasedOn="{StaticResource comboBox}">
                                        <Setter Property="Margin" Value="5 1"/>
                                    </Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Margin" Value="10,5"/>
                                        <Setter Property="Height" Value="auto"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                        <Setter Property="FontFamily" Value="Source Sans Pro"/>
                                        <Setter Property="Foreground" Value="{DynamicResource on-background-brush}"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid x:Name="mainSoftwarePopupGrid">
                                    <Grid.DataContext>
                                        <local:Software x:Name="soft"/>
                                    </Grid.DataContext>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="softwareNameGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Наименование"/>
                                        <ComboBox Grid.Row="1" x:Name="softwareName" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="Name">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="softwareCostGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Стоимость"/>
                                        <TextBox Grid.Row="1" x:Name="softwareCost">
                                            <TextBox.Text>
                                                <Binding Path="Cost">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="softwareCountGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Стоимость"/>
                                        <TextBox Grid.Row="1" x:Name="softwareCount">
                                            <TextBox.Text>
                                                <Binding Path="Count">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                    <Grid x:Name="SoftwareInvoiceGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Номер накладной"/>
                                        <ComboBox Grid.Row="1" x:Name="softwareInvoice" IsEditable="True" 
                                                  IsTextSearchEnabled="False" StaysOpenOnEdit="True">
                                            <ComboBox.Text>
                                                <Binding Path="InvoiceNumber">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                        </ComboBox>
                                    </Grid>
                                    <Grid x:Name="typeLicenseGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Тип"/>
                                        <ComboBox Grid.Row="1" x:Name="typeLicense" IsTextSearchEnabled="True"/>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <!--<CheckBox Content="Автоматически устанавливать следующий доступный инвентарный номер" 
                                              VerticalAlignment="Center" x:Name="autoInvN" IsChecked="False" Checked="AutoInvN_Checked"/>
                                    <CheckBox Content="Запретить установку одного инвентарного номера для нескольких устройств" x:Name="disabledRepeatInvN" 
                                              VerticalAlignment="Center" IsChecked="True" Checked="DisabledRepeatInvN_Checked" Unchecked="DisabledRepeatInvN_Unchecked"/>
                                    <CheckBox Content="Изменить для аналогичных устройств" x:Name="changeAnalog" VerticalAlignment="Center"
                                              Checked="ChangeAnalog_Checked" Unchecked="changeAnalog_Unchecked" IsChecked="False"
                                              ToolTip="Совпадают по имени и цене"/>-->
                                    </StackPanel>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Content="Сохранить" Style="{DynamicResource default-button}" Margin="5" Padding="10 5" Click="SaveChanges"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
    </Border>
</Window>
